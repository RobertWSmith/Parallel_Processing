#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics pdftex
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Lab 4: Experiments with OpenMP
\end_layout

\begin_layout Author
Robert Smith
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<setup,include=FALSE>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

library(sqldf)
\end_layout

\begin_layout Plain Layout

library(ggplot2)
\end_layout

\begin_layout Plain Layout

library(scales)
\end_layout

\begin_layout Plain Layout

library(gridExtra)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

opts_chunk$set(echo=FALSE,message=FALSE,warning=FALSE,dev="pdf",dpi=600)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Floyd's Algorithm experiment offered some interesting results.
 In the end, I believe that 2 threads offers the best performance (on my
 machine) with a Core i5 1.7ghz processor.
 The ANOVA experiment & Tukey's HSD test confirm that there is no significant
 difference between 2 & 4 and 4 & 7 threads, but there is a significant
 difference between 2 & 7 threads.
 The boxplot included also clearly shows the difference.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<floyd>>=
\end_layout

\begin_layout Plain Layout

P4Floyd <- read.table(
\end_layout

\begin_layout Plain Layout

  "~/GitHub/P4_Floyd/P3.csv",
\end_layout

\begin_layout Plain Layout

  header = FALSE,
\end_layout

\begin_layout Plain Layout

  sep = ",",
\end_layout

\begin_layout Plain Layout

  colClasses = c("factor", "numeric") 
\end_layout

\begin_layout Plain Layout

)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

P4Floyd <- cbind(P4Floyd, rep("P4", nrow(P4Floyd))) 
\end_layout

\begin_layout Plain Layout

names(P4Floyd) <- c("block_size", "time", "problem") 
\end_layout

\begin_layout Plain Layout

P4Floyd[,2] <- P4Floyd[,2]/1000
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

anova <- aov(time~block_size, P4Floyd) 
\end_layout

\begin_layout Plain Layout

summary(anova)
\end_layout

\begin_layout Plain Layout

TukeyHSD(anova)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<floyd2,results="asis">>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

minsP4Floyd <- sqldf("select block_size, min(time) as time from P4Floyd
 group by block_size")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

p1 <- ggplot(minsP4Floyd) + geom_histogram(aes(x= block_size, y = time))
 + ggtitle("Minimum Time by Block Size")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

p2 <- ggplot(P4Floyd) + geom_boxplot(aes(x = block_size, y = time)) + ggtitle("B
oxplot of Time by Block Size")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

grid.arrange(p1, p2, ncol=1)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the case of the matrix example, I note that the minimum run time was
 achieved with 16 threads, and when I viewed a boxplot of the results for
 each I see that while each number of threads are all in a similar range
 with a similar 
\begin_inset Formula $\mu$
\end_inset

 value, that 16 threads has a smaller minimum and maximum run time value.
 The experiment was run 5,000 times per block size for OpenMP with the 16x16
 matrices provided.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<<load>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

P4mtx <- read.table(
\end_layout

\begin_layout Plain Layout

     "~/GitHub/P4_Matrix/P4_mtx.csv",
\end_layout

\begin_layout Plain Layout

     header = FALSE,
\end_layout

\begin_layout Plain Layout

     sep = ",",
\end_layout

\begin_layout Plain Layout

     colClasses = c("factor", "numeric")  
\end_layout

\begin_layout Plain Layout

) 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

P4mtx <- cbind(P4mtx, rep("P4", nrow(P4mtx))) 
\end_layout

\begin_layout Plain Layout

names(P4mtx) <- c("block_size", "time", "problem") 
\end_layout

\begin_layout Plain Layout

P4mtx[,2] <- P4mtx[,2]/1000
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

minsP4mtx <- sqldf("select block_size, min(time) as time from P4mtx group
 by block_size")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

p1 <- ggplot(minsP4mtx) + geom_histogram(aes(x= block_size, y = time)) +
 ggtitle("Minimum Time by Block Size")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

p2 <- ggplot(P4mtx) + geom_boxplot(aes(x = block_size, y = time)) + ggtitle("Box
plot of Time by Block Size")
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

grid.arrange(p1, p2, ncol=1)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
